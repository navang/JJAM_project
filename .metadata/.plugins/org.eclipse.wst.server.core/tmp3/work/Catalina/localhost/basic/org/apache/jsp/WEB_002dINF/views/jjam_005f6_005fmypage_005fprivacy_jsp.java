/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.20
 * Generated at: 2019-07-18 09:43:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jjam_005f6_005fmypage_005fprivacy_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n");
      out.write("\tintegrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n");
      out.write("\tcrossorigin=\"anonymous\">\r\n");
      out.write("\t<script\r\n");
      out.write("\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\r\n");
      out.write("\tintegrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"\r\n");
      out.write("\tintegrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!--이메일-->\r\n");
      out.write("<script>\r\n");
      out.write("/**\r\n");
      out.write(" * FloatLabels\r\n");
      out.write(" * Version: 1.0\r\n");
      out.write(" * URL: http://clubdesign.github.io/floatlabels.js/\r\n");
      out.write(" * Description: \r\n");
      out.write(" * Author: Marcus Pohorely ( http://www.clubdesign.at )\r\n");
      out.write(" * Copyright: Copyright 2013 / 2014 http://www.clubdesign.at\r\n");
      out.write(" */\r\n");
      out.write(" !function(a,b){function g(b,c){this.$element=a(b),this.settings=a.extend({},f,c),this.init()}var e=\"floatlabel\",f={slideInput:!0,labelStartTop:\"20px\",labelEndTop:\"10px\",paddingOffset:\"10px\",transitionDuration:.3,transitionEasing:\"ease-in-out\",labelClass:\"\",typeMatches:/text|password|email|number|search|url/};g.prototype={init:function(){var a=this,c=this.settings,d=c.transitionDuration,e=c.transitionEasing,f=this.$element,g={\"-webkit-transition\":\"all \"+d+\"s \"+e,\"-moz-transition\":\"all \"+d+\"s \"+e,\"-o-transition\":\"all \"+d+\"s \"+e,\"-ms-transition\":\"all \"+d+\"s \"+e,transition:\"all \"+d+\"s \"+e};if(\"INPUT\"===f.prop(\"tagName\").toUpperCase()&&c.typeMatches.test(f.attr(\"type\"))){var h=f.attr(\"id\");h||(h=Math.floor(100*Math.random())+1,f.attr(\"id\",h));var i=f.attr(\"placeholder\"),j=f.data(\"label\"),k=f.data(\"class\");k||(k=\"\"),i&&\"\"!==i||(i=\"You forgot to add placeholder attribute!\"),j&&\"\"!==j||(j=i),this.inputPaddingTop=parseFloat(f.css(\"padding-top\"))+parseFloat(c.paddingOffset),f.wrap('<div class=\"floatlabel-wrapper\" style=\"position:relative\"></div>'),f.before('<label for=\"'+h+'\" class=\"label-floatlabel '+c.labelClass+\" \"+k+'\">'+j+\"</label>\"),this.$label=f.prev(\"label\"),this.$label.css({position:\"absolute\",top:c.labelStartTop,left:f.css(\"padding-left\"),display:\"none\",\"-moz-opacity\":\"0\",\"-khtml-opacity\":\"0\",\"-webkit-opacity\":\"0\",opacity:\"0\"}),c.slideInput||f.css({\"padding-top\":this.inputPaddingTop}),f.on(\"keyup blur change\",function(b){a.checkValue(b)}),b.setTimeout(function(){a.$label.css(g),a.$element.css(g)},100),this.checkValue()}},checkValue:function(a){if(a){var b=a.keyCode||a.which;if(9===b)return}var c=this.$element,d=c.data(\"flout\");\"\"!==c.val()&&c.data(\"flout\",\"1\"),\"\"===c.val()&&c.data(\"flout\",\"0\"),\"1\"===c.data(\"flout\")&&\"1\"!==d&&this.showLabel(),\"0\"===c.data(\"flout\")&&\"0\"!==d&&this.hideLabel()},showLabel:function(){var a=this;a.$label.css({display:\"block\"}),b.setTimeout(function(){a.$label.css({top:a.settings.labelEndTop,\"-moz-opacity\":\"1\",\"-khtml-opacity\":\"1\",\"-webkit-opacity\":\"1\",opacity:\"1\"}),a.settings.slideInput&&a.$element.css({\"padding-top\":a.inputPaddingTop}),a.$element.addClass(\"active-floatlabel\")},50)},hideLabel:function(){var a=this;a.$label.css({top:a.settings.labelStartTop,\"-moz-opacity\":\"0\",\"-khtml-opacity\":\"0\",\"-webkit-opacity\":\"0\",opacity:\"0\"}),a.settings.slideInput&&a.$element.css({\"padding-top\":parseFloat(a.inputPaddingTop)-parseFloat(this.settings.paddingOffset)}),a.$element.removeClass(\"active-floatlabel\"),b.setTimeout(function(){a.$label.css({display:\"none\"})},1e3*a.settings.transitionDuration)}},a.fn[e]=function(b){return this.each(function(){a.data(this,\"plugin_\"+e)||a.data(this,\"plugin_\"+e,new g(this,b))})}}(jQuery,window,document);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("    $('.form-control').floatlabel({\r\n");
      out.write("        labelClass: 'float-label',\r\n");
      out.write("        labelEndTop: 5\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form action=\"\" class=\"tab\" id=\"tab1\">\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("      <div class=\"row\">\r\n");
      out.write("          <div class=\"col-md-8  justify-content-center\">\r\n");
      out.write("             <h2 style=\"color:black;\">개인정보 변경</h2>\r\n");
      out.write("              <div class=\"form-group\">\r\n");
      out.write("           <!-- 입력 요소(input,label)를 묶는 그룹-->\r\n");
      out.write("              <label for=\"user\" class=\"margin_top\">아이디</label>\r\n");
      out.write("              <input class=\"form-control\" id=\"user\" type=\"text\" value=\"godgod\" disabled>\r\n");
      out.write("              <div class=\"form-group\">\r\n");
      out.write("                  <!-- 입력 요소(input,label)를 묶는 그룹-->\r\n");
      out.write("                <label for=\"pw\" class=\"margin_top1\">기존 비밀번호</label>\r\n");
      out.write("                 <!--라벨-->\r\n");
      out.write("               <input class=\"form-control\" id=\"pw\" type=\"password\" placeholder=\"기존 비밀번호를 입력하세요\">\r\n");
      out.write("\r\n");
      out.write("              <label for=\"pw\" class=\"margin_top1\">새로운 비밀번호</label>\r\n");
      out.write("                 <!--라벨-->\r\n");
      out.write("               <input class=\"form-control\" id=\"npw\" type=\"password\" placeholder=\"새로운 비밀번호를 입력하세요\">\r\n");
      out.write("                <!--라벨-->\r\n");
      out.write("                <input class=\"form-control margin_top1\" id=\"npw\" type=\"password\" placeholder=\"새로운 비밀번호를 다시 입력하세요\">\r\n");
      out.write("             \r\n");
      out.write("              \r\n");
      out.write("              <!-- 주소-->\r\n");
      out.write("              <label for=\"pw\"class=\"margin_top1\">주소</label><br/>\r\n");
      out.write("              <input type=\"text\" id=\"sample6_postcode\" placeholder=\"우편번호\">\r\n");
      out.write("              <input type=\"button\" onclick=\"sample6_execDaumPostcode()\" value=\"우편번호 찾기\"><br>\r\n");
      out.write("              <input type=\"text\" id=\"sample6_address\" placeholder=\"주소\"><br>\r\n");
      out.write("              <input type=\"text\" id=\"sample6_detailAddress\" placeholder=\"상세주소\">\r\n");
      out.write("              <input type=\"text\" id=\"sample6_extraAddress\" placeholder=\"참고항목\">\r\n");
      out.write("              </div>\r\n");
      out.write("              </div>\r\n");
      out.write("       </div>       \r\n");
      out.write("      </div>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("          <button class=\"btn btn-primary float-right\">\r\n");
      out.write("              <!--flate-rigth 오른쪽으로 이동-->\r\n");
      out.write("              <i class=\"fas fa-paper-plane\"> 정보변경</i>\r\n");
      out.write("              <!--fontawesome icon-->\r\n");
      out.write("          </button>\r\n");
      out.write("  </div>\r\n");
      out.write("      </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
